name: Packer AMI Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-ami:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build the application
      - name: Build Application
        run: mvn clean package

      # Step 4: Run integration tests
      - name: Run Integration Tests
        run: mvn verify

      # Step 5: Prepare the artifact for Packer
      - name: Prepare Artifact
        run: |
          mkdir -p artifact
          cp target/*.jar artifact/webapp.jar

      # Step 6: Install Packer
      - name: Install Packer
        uses: hashicorp/setup-packer@v2
        with:
          packer_version: 'latest'

      # Step 7: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 8: Packer Build
      - name: Packer Build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd packer
          packer init .
          packer build \
            -var "aws_region=${{ env.AWS_REGION }}" \
            -var "db_password=${{ secrets.DB_PASSWORD }}" \
            -var "vpc_id=${{ secrets.AWS_VPC_ID }}" \
            -var "subnet_id=${{ secrets.AWS_SUBNET_ID }}" \
            packer-template.pkr.hcl
