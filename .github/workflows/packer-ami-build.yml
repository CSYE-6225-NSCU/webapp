name: Packer AMI Build and Share

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-share-ami:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Application
        run: mvn clean package

      - name: Prepare Artifact
        run: |
          mkdir -p artifact
          cp target/*.jar artifact/webapp.jar
          cp packer/cloudwatch-config.json artifact/

      - name: Install Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: '1.11.2'  # Specify the desired Packer version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Packer
        working-directory: packer
        run: packer init .

      - name: Validate Packer Template
        working-directory: packer
        run: |
          packer validate \
            -var "artifact_path=../artifact/webapp.jar" \
            -var "instance_type=t2.micro" \
            -var "region=${{ secrets.AWS_REGION }}" \
            packer-template.pkr.hcl

      - name: Build AMI
        working-directory: packer
        run: |
          packer build \
            -var "instance_type=t2.micro" \
            -var "region=${{ secrets.AWS_REGION }}" \
            packer-template.pkr.hcl

      - name: List Packer Directory Contents
        run: |
          echo "Listing contents of packer directory:"
          ls -la packer

      - name: Extract AMI ID
        id: extract_ami
        run: |
          # Verify if manifest.json exists
          if [ ! -f packer/manifest.json ]; then
            echo "Error: manifest.json not found in packer directory."
            exit 1
          fi
          # Extract the AMI ID without the source prefix
          AMI_ID=$(jq -r '.builds[0].artifact_id' packer/manifest.json | cut -d':' -f2)
          # Validate AMI_ID format
          if [[ ! $AMI_ID =~ ^ami-[0-9a-fA-F]{8,17}$ ]]; then
            echo "Error: Extracted AMI ID is invalid: $AMI_ID"
            exit 1
          fi
          echo "AMI_ID=${AMI_ID}" >> $GITHUB_ENV

      - name: Share AMI with Demo Account
        run: |
          DEMO_ACCOUNT_ID="503561445917"  
          aws ec2 modify-image-attribute \
            --image-id $AMI_ID \
            --launch-permission "Add=[{UserId=${DEMO_ACCOUNT_ID}}]"
